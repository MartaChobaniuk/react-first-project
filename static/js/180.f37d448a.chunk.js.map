{"version":3,"file":"static/js/180.f37d448a.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-first-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-first-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tWidt\",\"profileInfoPhoto\":\"ProfileInfo_profileInfoPhoto__IeqQM\",\"contact\":\"ProfileInfo_contact__5RfLN\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  let [status, setStatus] = useState(props.status);\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  return (<div>\n      {!editMode &&\n        <div>\n          <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '----' }</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input  autoFocus={true} \n                  onBlur={deactivateEditMode}\n                  onChange={onStatusChange}\n                  value={status} />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport {createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport { reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport styles from '../../common/FormsControls/FormsControls.module.css';\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n  return (<form onSubmit={handleSubmit}>\n      <div><button>Save</button></div>\n      {error && <div className={styles.formSummaryError}>{error}</div>}\n\n      <div>\n        <b>Full name:</b>{createField('Full name', 'FullName', [], Input)}\n      </div> \n\n      <div>\n        <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type:'checkbox'} )}\n      </div>\n\n      <div>\n        <b>My professional skills:</b> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n      </div>\n\n      <div>\n        <b>About me:</b> {createField('About me', 'aboutMe', [], Textarea)}\n      </div>\n\n      <div>\n        <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n          return <div key={key} className={classes.contact}>\n            <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\n          </div>\n        })}\n      </div>\n    </form>\n  );\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form:'profileDataForm', destroyOnUnmount: false})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../img/userPhoto.webp';\nimport { useState } from 'react';\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if(!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData)\n    .then( () => {\n      setEditMode(false);\n    })\n  }\n\n  return (\n    <div className={classes.profileInfo}>\n      <div className={classes.descriptionBlock}>\n        <img \n          src={profile.photos.large || userPhoto} \n          alt=''\n          className={classes.profileInfoPhoto} \n        />\n        <br/>\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\n\n        { editMode \n          ? <ProfileDataForm  initialValues={profile}\n                              profile={profile}\n                              onSubmit={onSubmit} /> \n          : <ProfileData  profile={profile} \n                          isOwner={isOwner}\n                          goToEditMode={ () => {setEditMode(true)}} />}\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n  return (\n    <div>\n      {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n      <div>\n        <b>Full name:</b> { profile.fullName }\n      </div>\n\n      <div>\n        <b>Looking for a job:</b> { profile.lookingForAJob ? 'yes' : 'no'}\n      </div>\n\n      {profile.lookingForAJob &&\n        <div>\n          <b>My professional skills:</b> {profile.lookingForAJobDescription}\n        </div>\n      }\n\n      <div>\n        <b>About me:</b> { profile.aboutMe }\n      </div>\n\n      <div>\n        <b>Contacts:</b> { Object.keys(profile.contacts).map(key => {\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        }) }\n      </div>\n    </div>\n  )\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return (\n    <div className={classes.contact}>\n      {contactTitle}: {contactValue}\n    </div>\n  )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__mnDJ-\",\"postsBlock\":\"MyPosts_postsBlock__sU53-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__EgC8D\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img \n        src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzfoadBiOrLG1zXJbI_zru2koK-4ElSc-k5g&usqp=CAU'\n        alt='girl'/>\n        { props.message }\n        <div>\n          <span>like</span> { props.likesCount }\n        </div>\n    </div>\n  );\n}    \n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength10 =  maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'Post message'} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n\n  let postsElement = \n    props.posts.map ( p => <Post message={p.message} likesCount={p.likesCount} /> );\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n\n      <div className={classes.posts}>\n        { postsElement }\n      </div>\n    </div>\n  );\n});\n\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile.reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n  return (\n    <div className={classes}>\n      < ProfileInfo isOwner={props.isOwner} \n                    profile={props.profile} \n                    status={props.status} \n                    updateStatus={props.updateStatus} \n                    savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n      < MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile.reducer';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if(!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile  {...this.props}\n                isOwner={!this.props.router.params.userId}\n                profile={this.props.profile} \n                status={this.props.status} \n                updateStatus={this.props.updateStatus} \n                savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n          <Component\n              {...props}\n              router={{ location, navigate, params }}\n          />\n      );\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  withAuthRedirect,\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","destroyOnUnmount","_ref","handleSubmit","profile","error","onSubmit","className","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","classes","contact","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","profileInfo","descriptionBlock","src","photos","large","userPhoto","alt","profileInfoPhoto","target","files","length","ProfileDataForm","initialValues","formData","then","ProfileStatusWithHooks","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","validate","required","placeholder","React","postsElement","posts","p","Post","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}