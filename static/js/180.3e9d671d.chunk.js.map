{"version":3,"file":"static/js/180.3e9d671d.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-first-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-first-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tWidt\",\"profileInfoPhoto\":\"ProfileInfo_profileInfoPhoto__IeqQM\",\"contact\":\"ProfileInfo_contact__5RfLN\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  let [status, setStatus] = useState(props.status);\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  return (<div>\n      {!editMode &&\n        <div>\n          <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '----' }</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input  autoFocus={true} \n                  onBlur={deactivateEditMode}\n                  onChange={onStatusChange}\n                  value={status} />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport {createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport { reduxForm } from 'redux-form';\n\nconst ProfileDataForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit()}>\n      <div><button>Save</button></div>\n\n      <div>\n        <b>Full name:</b>{createField('Full name', 'FullName', [], Input)}\n      </div> \n\n      <div>\n        <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type:'checkbox'} )}\n      </div>\n\n      <div>\n        <b>My professional skills:</b> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n      </div>\n\n      <div>\n        <b>About me:</b> {createField('About me', 'aboutMe', [], Textarea)}\n      </div>\n    </form>\n  );\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form:'profileDataForm', destroyOnUnmount: false})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../img/userPhoto.webp';\nimport { useState } from 'react';\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if(!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData);\n  }\n\n  return (\n    <div className={classes.profileInfo}>\n      <div className={classes.descriptionBlock}>\n        <img \n          src={profile.photos.large || userPhoto} \n          alt=''\n          className={classes.profileInfoPhoto} \n        />\n        <br/>\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\n\n        { editMode \n          ? <ProfileDataForm  initialValues={profile}\n                              profile={profile}\n                              onSubmit={onSubmit} /> \n          : <ProfileData  profile={profile} \n                          isOwner={isOwner}\n                          goToEditMode={ () => {setEditMode(true)}} />}\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n  return (\n    <div>\n      {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n      <div>\n        <b>Full name:</b> { profile.fullName }\n      </div>\n\n      <div>\n        <b>Looking for a job:</b> { profile.lookingForAJob ? 'yes' : 'no'}\n      </div>\n\n      {profile.lookingForAJob &&\n        <div>\n          <b>My professional skills:</b> {profile.lookingForAJobDescription}\n        </div>\n      }\n\n      <div>\n        <b>About me:</b> { profile.aboutMe }\n      </div>\n\n      <div>\n        <b>Contacts:</b> { Object.keys(profile.contacts).map(key => {\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        }) }\n      </div>\n    </div>\n  )\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return (\n    <div className={classes.contact}>\n      {contactTitle}: {contactValue}\n    </div>\n  )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__mnDJ-\",\"postsBlock\":\"MyPosts_postsBlock__sU53-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__EgC8D\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img \n        src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzfoadBiOrLG1zXJbI_zru2koK-4ElSc-k5g&usqp=CAU'\n        alt='girl'/>\n        { props.message }\n        <div>\n          <span>like</span> { props.likesCount }\n        </div>\n    </div>\n  );\n}    \n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength10 =  maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'Post message'} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n\n  let postsElement = \n    props.posts.map ( p => <Post message={p.message} likesCount={p.likesCount} /> );\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n\n      <div className={classes.posts}>\n        { postsElement }\n      </div>\n    </div>\n  );\n});\n\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile.reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n  return (\n    <div className={classes}>\n      < ProfileInfo isOwner={props.isOwner} \n                    profile={props.profile} \n                    status={props.status} \n                    updateStatus={props.updateStatus} \n                    savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n      < MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile.reducer';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if(!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile  {...this.props}\n                isOwner={!this.props.router.params.userId}\n                profile={this.props.profile} \n                status={this.props.status} \n                updateStatus={this.props.updateStatus} \n                savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n          <Component\n              {...props}\n              router={{ location, navigate, params }}\n          />\n      );\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  withAuthRedirect,\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","destroyOnUnmount","_ref","handleSubmit","onSubmit","createField","Input","type","Textarea","ProfileData","_ref2","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","_ref3","className","classes","contact","savePhoto","saveProfile","Preloader","profileInfo","descriptionBlock","src","photos","large","userPhoto","alt","profileInfoPhoto","target","files","length","ProfileDataForm","initialValues","formData","ProfileStatusWithHooks","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","validate","required","placeholder","React","postsElement","posts","p","Post","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}