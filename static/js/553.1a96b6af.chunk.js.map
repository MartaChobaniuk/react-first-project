{"version":3,"file":"static/js/553.1a96b6af.chunk.js","mappings":"8MACA,G,OAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCa5I,EAVmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQC,OAAS,IAAMD,EAAQE,OAAOC,UACpDC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIV,EAAKO,SAAA,CAAC,IAAGR,EAAMY,KAAM,QAGxC,ECHA,EANgB,SAACZ,GACf,OACES,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAQQ,QAAQL,SAAA,CAAC,IAAGR,EAAMa,QAAQ,MAEtD,E,gDCEMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACjB,GACtB,OACES,EAAAA,EAAAA,MAAA,QAAMU,SAAUnB,EAAMoB,aAAaZ,SAAA,EACjCL,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAAEC,UAAWC,EAAAA,GACXX,KAAM,iBACNY,SAAU,CAACC,EAAAA,EAAUX,GACrBY,YAAY,0BAEtBvB,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,aAIhB,IA8BA,EAzBgB,SAACR,GACf,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI7B,EAAAA,EAAAA,KAAC8B,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBV,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,GAAgB,IAC3FgC,EAAmBP,EAAMQ,SAASJ,KAAK,SAAAK,GAAC,OAAIjC,EAAAA,EAAAA,KAACkC,EAAO,CAACxB,QAASuB,EAAEvB,SAAcuB,EAAElC,GAAK,IAMzF,OAAKF,EAAMsC,QAGT7B,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAQyB,QAAQtB,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQkC,aAAa/B,SACjCqB,KAGJ1B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQ8B,SAAS3B,UAC/BL,EAAAA,EAAAA,KAAA,OAAAK,SAAO0B,OAET/B,EAAAA,EAAAA,KAACa,EAAmB,CAACG,SAfL,SAACqB,GACnBxC,EAAMyC,YAAYD,EAAOE,eAC3B,QAE0BvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAAChC,GAAG,UAczC,E,UCjCA,GAAeiC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAAClB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,IAEyB,SAACkB,GACxB,MAAO,CACLL,YAAa,SAACC,GACZI,GAASC,EAAAA,EAAAA,GAAmBL,GAC9B,EAEJ,IAIEM,EAAAA,EAFF,CAGEC,E","sources":["webpack://react-first-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__KXqjc\",\"dialogsItems\":\"Dialogs_dialogsItems__cmLkf\",\"active\":\"Dialogs_active__eecRh\",\"messages\":\"Dialogs_messages__9oCWW\"};","import React from 'react';\nimport classes from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={classes.dialog + ' ' + classes.active}>\n      <NavLink to={path}> { props.name } </NavLink>\n    </div>\n  );\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from './../Dialogs.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}> { props.message} </div>\n  );\n}\n\nexport default Message;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Navigate } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field  component={Textarea} \n                name={'newMessageBody'}\n                validate={[required, maxLength50]}\n                placeholder='Enter your message' />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\n  let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>) ;\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  if (!props.isAuth) return <Navigate to='/login' />\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>\n        { dialogsElements }\n      </div>\n\n      <div className={classes.messages}>\n        <div>{ messagesElements }</div>\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n  );\n}\n\nexport default Dialogs;","import { compose } from 'redux';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { sendMessageCreator } from '../../redux/dialogs.reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);;"],"names":["props","path","id","_jsx","className","classes","dialog","active","children","_jsxs","NavLink","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","dialogsItems","values","sendMessage","newMessageBody","Navigate","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}