{"version":3,"file":"static/js/638.e5f0e9d8.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-first-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-first-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tWidt\",\"profileInfoPhoto\":\"ProfileInfo_profileInfoPhoto__IeqQM\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  let [status, setStatus] = useState(props.status);\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  return (<div>\n      {!editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || '----' }</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input  autoFocus={true} \n                  onBlur={deactivateEditMode}\n                  onChange={onStatusChange}\n                  value={status} />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../img/userPhoto.webp';\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\n  if(!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  return (\n    <div className={classes.profileInfo}>\n      <div className={classes.descriptionBlock}>\n        <img \n          src={profile.photos.large || userPhoto} \n          alt=''\n          className={classes.profileInfoPhoto} \n        />\n        <br/>\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__mnDJ-\",\"postsBlock\":\"MyPosts_postsBlock__sU53-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__EgC8D\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img \n        src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzfoadBiOrLG1zXJbI_zru2koK-4ElSc-k5g&usqp=CAU'\n        alt='girl'/>\n        { props.message }\n        <div>\n          <span>like</span> { props.likesCount }\n        </div>\n    </div>\n  );\n}    \n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength10 =  maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'Post message'} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n\n  let postsElement = \n    props.posts.map ( p => <Post message={p.message} likesCount={p.likesCount} /> );\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n\n      <div className={classes.posts}>\n        { postsElement }\n      </div>\n    </div>\n  );\n});\n\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile.reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n  return (\n    <div className={classes}>\n      < ProfileInfo isOwner={props.isOwner} \n                    profile={props.profile} \n                    status={props.status} \n                    updateStatus={props.updateStatus} \n                    savePhoto={props.savePhoto} />\n      < MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from '../../redux/profile.reducer';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if(!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile  {...this.props}\n                isOwner={!this.props.router.params.userId}\n                profile={this.props.profile} \n                status={this.props.status} \n                updateStatus={this.props.updateStatus} \n                savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n          <Component\n              {...props}\n              router={{ location, navigate, params }}\n          />\n      );\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\n  withRouter,\n  withAuthRedirect,\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","_ref","profile","isOwner","savePhoto","Preloader","className","classes","profileInfo","descriptionBlock","src","photos","large","userPhoto","alt","profileInfoPhoto","type","target","files","length","ProfileStatusWithHooks","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","React","postsElement","posts","map","p","Post","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}